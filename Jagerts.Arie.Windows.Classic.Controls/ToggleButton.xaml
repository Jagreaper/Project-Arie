<ToggleButton x:Class="Jagerts.Arie.Windows.Classic.Controls.ToggleButton"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Jagerts.Arie.Windows.Classic.Controls">
    <ToggleButton.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources\GlobalColors.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="ArieToggleButtonPathStyle" TargetType="{x:Type Path}">
                <Setter Property="Stretch" Value="Uniform"/>
            </Style>
            
            <Style x:Key="ArieToggleButtonStyle" TargetType="{x:Type local:ToggleButton}">
                <Setter Property="Background" Value="{DynamicResource ArieMainBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ArieMainBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ArieMainContentBrush}"/>
                <Setter Property="PathStyle" Value="{StaticResource ArieToggleButtonPathStyle}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Padding" Value="10 7"/>
                <Setter Property="BorderThickness" Value="0 4 0 0"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ToggleButton}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Path Style="{TemplateBinding PathStyle}"
                                      Data="{TemplateBinding PathData}"
                                      Fill="{TemplateBinding Foreground}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ArieHoverBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource ArieHoverBorderBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource ArieHoverContentBrush}"/>
                    </Trigger>

                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ArieSelectedBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource ArieSelectedBorderBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource ArieSelectedContentBrush}"/>
                    </Trigger>

                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource ArieDisabledBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource ArieDisabledBorderBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource ArieDisabledContentBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type local:ToggleButton}" BasedOn="{StaticResource ArieToggleButtonStyle}"/>
        </ResourceDictionary>
    </ToggleButton.Resources>
</ToggleButton>
